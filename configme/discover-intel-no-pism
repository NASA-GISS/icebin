#!/bin/sh
#

This is an old GNU Autotools script.  Needs to be converted to CMake.

HOME_OPT=/gpfsm/dnb32/ccruz/devel/GLINT2/libraries

DEST_PREFIX=$HOME_OPT/glint2

## ----- Where is your GALAHAD installation?
GALAHAD_HOME=/gpfsm/dnb32/ccruz/devel/GLINT2/galahad
GALAHAD_ARCH=pc64.lnx.ifr
export GALAHAD_INC_DIR="$GALAHAD_HOME/modules/$GALAHAD_ARCH/double"
export GALAHAD_LIB_DIR="$GALAHAD_HOME/objects/$GALAHAD_ARCH/double"


export CC=icc
export CXX=icc
export FC="ifort"

# =========================================================
# The following prerequisites do not need to be touched, if they were
# installed via MacPorts.

# Which python we want to use --- whether it's the default, or some other
export PYTHON=python

export BOOST_HOME=$HOME_OPT/boost

export EIGEN_CFLAGS="-I$HOME_OPT/eigen/include"
export EIGEN_LIBS=""

#NETCDF_HOME=/usr/local/other/SLES11.1/netcdf4/4.3.0/intel-13.0.1.117
NETCDF_HOME=/usr/local/other/SLES11.1/netcdf4/4.1.3/intel-13.0.1.117
export NETCDF_CFLAGS="-I$NETCDF_HOME/include"
export NETCDF_LIBS="-L$NETCDF_HOME/lib -lnetcdf"

export NETCDFF_HOME=/usr/local/other/SLES11.1/netcdf4/4.3.0/intel-13.0.1.117
export NETCDFF_CFLAGS="-I$NETCDFF_HOME/include"
export NETCDFF_LIBS="""-L$NETCDFF_HOME/lib -lnetcdff"

export NETCDFCXX_HOME=/usr/local/other/SLES11.1/netcdf4/4.3.0/intel-13.0.1.117
export NETCDFCXX_CFLAGS="-I$NETCDFCXX_HOME/include"
export NETCDFCXX_LIBS="""-L$NETCDFCXX_HOME/lib -lnetcdf_c++"

export MPI_HOME=/usr/local/intel/mpi/4.1.3.048
export MPI_INCLUDE="$MPI_HOME/include64"
export MPI_CFLAGS="-I $MPI_INCLUDE"
#export MPI_LIBS="-L$MPI_HOME/lib -lmpi -lmpi_cxx"
export MPI_LIBS="-L$MPI_HOME/lib64 -lmpi"
# Do I need -lmpiif or -lmpiic here????

export PROJ_HOME=/usr/local/other/SLES11.1/proj/4.7.0/intel-12.1.0.233
export PROJ_CFLAGS="-I $PROJ_HOME/include"
export PROJ_LIBS="-L$PROJ_HOME/lib -lproj"

BLITZ_HOME=$HOME_OPT/blitz
export BLITZ_CFLAGS="-I$BLITZ_HOME/include"
export BLITZ_LIBS="-L$BLITZ_HOME/lib -lblitz"


GMP_HOME=$HOME_OPT/gmp
export GMP_CFLAGS="-I$GMP_HOME/include"
export GMP_LIBS="-L$GMP_HOME/lib -lgmp"
MPFR_HOME=$HOME_OPT/mpfr
export MPFR_CFLAGS="-I$MPFR_HOME/include"
export MPFR_LIBS="-L$MPFR_HOME/lib -lmpfr"

#GMP_HOME=/usr
#export GMP_CFLAGS="-I $GMP_HOME/include"
#export GMP_LIBS="-L$GMP_HOME/lib64 -lgmp"
#MPFR_HOME=/usr
#export MPFR_CFLAGS="-I $MPFR_HOME/include"
#export MPFR_LIBS="-L$MPFR_HOME/lib64 -lmpfr"

export CGAL_HOME=$HOME_OPT/cgal
export CGAL_CFLAGS="-I$CGAL_HOME/include"
export CGAL_LIBS="-L$CGAL_HOME/lib -lCGAL"

# Link fortran libraries into Python extension.  Other linking steps are
# done with the $(FCC), so this is not needed.
#export FORTRAN_LIBS="-lgfortran"

# ===================================================================
# Special rounding is required for CGAL
# -fp-model strict for intel
export CPPFLAGS="-frounding-math"
export AM_LDFLAGS="-Wl,-rpath=$CGAL_HOME/lib"	# cause it doesn't use libtool

./configure --prefix=$DEST_PREFIX \
	--with-boost=$BOOST_HOME \
	--with-galahad


